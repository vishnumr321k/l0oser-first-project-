<%- include('../partials/admin/header') %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    </head>
    <style>
        .error-message {
            color: red;
        }


        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }


        .thumbnail {
            margin-right: 10px;


        }

        .content-main {
            padding: 2rem;
            background-color: #ffffff;
        }

        .content-title {
            color: #333333;
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
        }

        .card {
            background: #ffffff;
            border: 1px solid #e5e7eb;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            background: #f9fafb;
            border-bottom: 1px solid #e5e7eb;
            padding: 1rem;
        }

        .card-header h4 {
            color: #374151;
            font-size: 1.1rem;
            margin: 0;
        }

        .card-body {
            padding: 1.5rem;
        }

        .form-label {
            color: #374151;
            font-weight: 500;
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-control,
        .form-select {
            border: 1px solid #d1d5db;
            border-radius: 0.375rem;
            padding: 0.5rem;
            width: 100%;
            transition: border-color 0.15s ease-in-out;
        }

        .form-control:focus,
        .form-select:focus {
            border-color: #6b7280;
            outline: none;
            box-shadow: 0 0 0 3px rgba(107, 114, 128, 0.1);
        }

        textarea.form-control {
            min-height: 100px;
        }

        .btn {
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            font-weight: 500;
            transition: all 0.15s ease-in-out;
        }

        .btn-primary {
            background-color: #111827;
            color: #ffffff;
            border: 1px solid #111827;
        }

        .btn-primary:hover {
            background-color: #374151;
            border-color: #374151;
        }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }

        .error-message {
            color: #dc2626;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }

        .thumbnails-container {
            display: flex;
            gap: 1rem;
            padding: 1rem;
            border: 1px dashed #d1d5db;
            border-radius: 0.375rem;
            margin-bottom: 1rem;
        }

        .thumbnail {
            position: relative;
            border: 1px solid #e5e7eb;
            border-radius: 0.25rem;
            padding: 0.25rem;
        }

        .remove-icon {
            position: absolute;
            top: -0.5rem;
            right: -0.5rem;
            background-color: #374151;
            color: #ffffff;
            width: 1.25rem;
            height: 1.25rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 0.875rem;
        }

        .image-cropper {
            border: 1px solid #e5e7eb;
            border-radius: 0.375rem;
            padding: 1rem;
            margin-bottom: 1rem;
        }

        #imgView1,
        #imgView2,
        #imgView3,
        #imgView4 {
            max-width: 100%;
            height: auto;
            margin-bottom: 1rem;
        }

        .hover-up:hover {
            transform: translateY(-2px);
            transition: transform 0.2s ease-in-out;
        }

        .error-message {
            color: #dc2626;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }

        .thumbnails-container {
            display: flex;
            overflow-x: auto;
            padding: 1rem;
            border: 1px dashed #d1d5db;
            border-radius: 0.375rem;
        }

        .thumbnail {
            margin-right: 10px;
            position: relative;
        }

        .content-main {
            padding: 2rem;
            background-color: #ffffff;
        }

        .product-form-container {
            display: grid;
            grid-template-columns: 60% 40%;
            gap: 2rem;
            max-width: 1400px;
            margin: 0 auto;
        }

        .product-details {
            padding-right: 2rem;
        }

        .image-upload-section {
            background: #ffffff;
            border-left: 1px solid #e5e7eb;
            padding-left: 2rem;
        }

        .image-upload-container {
            margin-bottom: 1.5rem;
            border: 1px solid #e5e7eb;
            border-radius: 0.5rem;
            padding: 1rem;
        }

        .image-preview {
            width: 100%;
            max-height: 200px;
            object-fit: contain;
            margin-bottom: 1rem;
            border: 1px solid #e5e7eb;
            border-radius: 0.375rem;
            padding: 0.5rem;
        }

        .card {
            background: #ffffff;
            border: 1px solid #e5e7eb;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .form-control,
        .form-select {
            border: 1px solid #d1d5db;
            border-radius: 0.375rem;
            padding: 0.5rem;
            width: 100%;
            transition: border-color 0.15s ease-in-out;
        }

        .btn-primary {
            background-color: #111827;
            color: #ffffff;
            border: 1px solid #111827;
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            transition: all 0.15s ease-in-out;
        }

        .btn-primary:hover {
            background-color: #374151;
        }
    </style>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form id="theFormSubmit" method="post" action="/admin/addproduct" enctype="multipart/form-data">

                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <option value="" disabled selected>Select a Brand</option>
                                    <%for(let i=0;i< brand.length;i++){%>
                                        <option value="<%=brand[i].brandName%>">
                                            <%=brand[i].brandName%>
                                        </option>
                                        <%}%>

                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description"
                                    class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="$" name="regularPrice" type="text"
                                            class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input placeholder="$" name="salePrice" type="text" class="form-control border">

                                    </div>
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="" name="quantity" type="text" class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Color</label>
                                        <input name="color" type="text" class="form-control border">
                                    </div>
                                    <div id="color-error" class="error-message"></div>
                                </div>

                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <option value="" disabled selected>Select a Brand</option>
                                                <%for(let i=0;i<cat.length;i++){%>
                                                    <option value="<%=cat[i].name%>">
                                                        <%=cat[i].name%>
                                                    </option>
                                                    <%}%>

                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="border row">
                                    <div id="addedImagesContainer" class="thumbnails-container"></div>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView1">
                                        <input class="form-control" type="file" name="images" id="input1" accept=""
                                            onchange="viewImage1(event), viewImage(event, 1)">
                                        <div id="input1-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg1" alt="">
                                        <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView2">


                                        <input class="form-control" type="file" name="images" id="input2"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage2(event),viewImage(event, 2)">
                                        <div id="input2-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg2" alt="">
                                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView3">


                                        <input class="form-control" type="file" name="images" id="input3"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage3(event),viewImage(event, 3)">
                                        <div id="input3-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg3" alt="">
                                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView4">



                                        <input class="form-control" type="file" name="images" id="input4"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage4(event),viewImage(event, 4)">
                                        <div id="input4-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg4" alt="">
                                        <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                            </div>
                    </div>
                    <div>
                        <button class="btn btn-md rounded font-sm hover-up" type="button" onclick="validateForm(event)
">Publish</button>
                    </div>
                    </form>
                </div>
            </div>
        </div>
        </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
       
        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function viewImage1(event) {
            document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage2(event) {
            document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage3(event) {
            document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage4(event) {
            document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0]);
        }

    
        const selectedImages = [];

        function handleFileSelect(event) {
            const addedImagesContainer = document.getElementById("addedImagesContainer");
            addedImagesContainer.innerHTML = "";
            const files = event.target.files;

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                selectedImages.push(file);

                const thumbnail = document.createElement("div");
                thumbnail.classList.add("thumbnail");

                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";
                img.style.width = "50px";
                img.style.height = "auto";

                const removeIcon = document.createElement("span");
                removeIcon.classList.add("remove-icon");
                removeIcon.innerHTML = "&times;";
                removeIcon.addEventListener("click", function () {
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }
                    thumbnail.remove();
                });

                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                addedImagesContainer.appendChild(thumbnail);
            }
        }

       
        document.getElementById("input1").addEventListener("change", handleFileSelect);

       
        function viewImage(event, index) {
            let input = event.target;
            let reader = new FileReader();

            reader.onload = function () {
                let dataURL = reader.result;
                let image = document.getElementById("imgView" + index);
                image.src = dataURL;

                let cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true,
                });

                let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
                cropperContainer.style.display = "block";

                let saveButton = document.querySelector("#saveButton" + index);
                saveButton.addEventListener("click", async function () {
                    let croppedCanvas = cropper.getCroppedCanvas();
                    let croppedImage = document.getElementById("croppedImg" + index);
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

                    let timestamp = new Date().getTime();
                    let fileName = `cropped-img-${timestamp}-${index}.png`;

                    await croppedCanvas.toBlob(blob => {
                        let input = document.getElementById('input' + index);
                        let imgFile = new File([blob], fileName, { type: blob.type });
                        const fileList = new DataTransfer();
                        fileList.items.add(imgFile);
                        input.files = fileList.files;
                    });

                    cropperContainer.style.display = 'none';
                    cropper.destroy();
                });
            };

            reader.readAsDataURL(input.files[0]);
        }

        function validateFileType(file) {
           
            const validImageTypes = [
                'image/jpeg',
                'image/jpg',
                'image/png',
                'image/webp'
            ];

            
            const isValidType = validImageTypes.includes(file.type);
            const extension = file.name.toLowerCase().split('.').pop();
            const isValidExtension = ['jpg', 'jpeg', 'png', 'webp'].includes(extension);

            return isValidType && isValidExtension;
        }

        
        function handleFileInput(event, inputNumber) {
            const file = event.target.files[0];
            if (file && !validateFileType(file)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid File Type',
                    text: 'Please upload only image files (JPG, PNG, WEBP)',
                    confirmButtonColor: '#3085d6'
                });
                
                event.target.value = '';
                document.getElementById(`imgView${inputNumber}`).src = '';
                return false;
            }
            
            return true;
        }

        
        function viewImage1(event) {
            if (handleFileInput(event, 1)) {
                document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0]);
            }
        }

        function viewImage2(event) {
            if (handleFileInput(event, 2)) {
                document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0]);
            }
        }

        function viewImage3(event) {
            if (handleFileInput(event, 3)) {
                document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0]);
            }
        }

        function viewImage4(event) {
            if (handleFileInput(event, 4)) {
                document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0]);
            }
        }

      
        function validateForm(event) {
            event.preventDefault();
            clearErrorMessages();

            
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementById('descriptionid').value;
            const brand = document.getElementsByName('brand')[0].value;
            const price = document.getElementsByName('regularPrice')[0].value;
            const saleprice = document.getElementsByName('salePrice')[0].value;
            const color = document.getElementsByName('color')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const quantity = document.getElementsByName('quantity')[0].value;

            let isValid = true;
            let validImageCount = 0;

         
            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            }

            if (description.trim() === "") {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }

            if (color.trim() === "") {
                displayErrorMessage('color-error', 'Please enter a color.');
                isValid = false;
            }

        
            if (!quantity || parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }

            if (!price || !/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (!saleprice || !/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

          
            if (price && saleprice && parseFloat(price) <= parseFloat(saleprice)) {
                displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
                isValid = false;
            }

            // Enhanced image validation
            const images = [
                document.getElementById('input1').files[0],
                document.getElementById('input2').files[0],
                document.getElementById('input3').files[0],
                document.getElementById('input4').files[0],
            ];

            images.forEach((image, index) => {
                const inputId = `input${index + 1}`;

                if (!image) {
                    displayErrorMessage(`${inputId}-error`, `Please add an image for field ${index + 1}`);
                    isValid = false;
                } else if (!validateFileType(image)) {
                    displayErrorMessage(`${inputId}-error`, `Image ${index + 1} must be a valid image file (JPG, PNG, WEBP)`);
                    isValid = false;
                } else {
                    validImageCount++;
                }
            });

            if (validImageCount < 3) {
                Swal.fire({
                    icon: 'error',
                    title: 'Image Required',
                    text: 'Please upload at least 3 valid images',
                    confirmButtonColor: '#3085d6'
                });
                isValid = false;
            }

            if (isValid) {
               
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Product added successfully',
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    document.getElementById('theFormSubmit').submit();
                });
            } else {
            
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Please check all fields and try again',
                    confirmButtonColor: '#3085d6'
                });
            }

            return false;
        }

    </script>

    <%- include('../partials/admin/footer') %>