<%- include('../partials/admin/header') %>

    <head>
        <style>
            .thumbnails-container {
                display: flex;
                overflow-x: auto;
            }


            .thumbnail {
                margin-right: 10px;
            }

            .input-upload {
                position: relative;
            }


            .error-message {
                color: red;
                display: none;
            }
        </style>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    </head>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>


                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">


                    <div class="card-body">
                        <%if(message.length>0){%>
                            <span class="text-danger">
                                <%=message%>
                            </span>
                            <%}%>
                                <form method="POST" action="/admin/editproduct/<%=product._id%>"
                                    enctype="multipart/form-data" id="editProductPage">
                                    <div class="mb-4">
                                        <label for="product_name" class="form-label">Product Name</label>
                                        <input type="text" name="productName" value="<%=product.productName%>"
                                            class="form-control border" id="product_name">
                                        <div id="productName-error" class="error-message"></div>
                                    </div>
                                    <div class="col-lg-4 mb-4">
                                        <label class="form-label">Brand</label>
                                        <select class="form-select border" name="brand">
                                            <%for(let i=0;i<brand.length;i++){%>
                                                <option value="<%=brand[i].brandName%>">
                                                    <%=brand[i].brandName%>
                                                </option>
                                                <%}%>
                                        </select>
                                        <div id="brand-error" class="error-message"></div>


                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label">Full description</label>
                                        <textarea name="description"
                                            class="form-control border"><%= product.description %></textarea>
                                        <div id="description-error" class="error-message"></div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Regular price</label>
                                                <input placeholder="$" name="regularPrice" type="text"
                                                    value="<%=product.regularPrice%>" class="form-control border">
                                                <div id="regularPrice-error" class="error-message"></div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Sale price</label>
                                                <input name="salePrice" type="text" value="<%=product.salePrice%>"
                                                    class="form-control border">
                                            </div>
                                            <div id="salePrice-error" class="error-message"></div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Quantity</label>
                                                <input name="quantity" type="text" value="<%=product.quantity%>"
                                                    class="form-control border">
                                                <div id="quantity-error" class="error-message"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">

                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Color</label>
                                                <input name="color" type="text" value="<%=product.color%>"
                                                    class="form-control border">
                                                <div id="color-error" class="error-message"></div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="card mb-4">


                                        <div class="card-body">
                                            <div class="row gx-2">
                                                <div class="col-sm-6 mb-3">
                                                    <label class="form-label">Category</label>
                                                    <select class="form-select border" style="width: 150px;"
                                                        name="category">
                                                        <%for(let i=0;i<cat.length;i++){%>
                                                            <option value="<%=cat[i].name%>">
                                                                <%=cat[i].name%>
                                                            </option>
                                                            <%}%>
                                                    </select>


                                                    <div id="category-error" class="error-message"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card mb-2">
                                        <div class="card-header">
                                            <h4>Choose images</h4>
                                        </div>
                                        <%for(let i=0;i<product.productImage.length;i++){%>
                                            <div class="col-md-12">
                                                <div class="mb-4">
                                                    <div class="col-12">
                                                        <td>
                                                            <input type="hidden" value="<%=product.productImage[i]%>"
                                                                id="imageDatas">
                                                            <img class="rounded" style="width: 50px; height: 60px;"
                                                                src="/uploads/re-image/<%=product.productImage[i]%>"
                                                                alt="">
                                                            <i onclick="deleteSingleImage('<%=product.productImage[i]%>', '<%=product._id%>')"
                                                                style="position: absolute; margin-left: .5rem; cursor: pointer;"
                                                                class="fa-thin fa-x">&times;</i>

                                                        </td>
                                                    </div>

                                                </div>
                                            </div>
                                            <%}%>

                                                <div class="card-body">
                                                    <div class="card-body align-items-center"
                                                        style="margin-bottom: 20px;">
                                                        <img src="" alt="" id="imgView1">
                                                        <input class="form-control" type="file" name="images"
                                                            id="input1" accept="image/png, image/jpeg, image/jpg"
                                                            onchange="viewImage1(event), viewImage(event, 1)">
                                                        <div id="images-error" class="error-message"></div>
                                                    </div>
                                                    <div class="image-cropper d-flex align-items-center"
                                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                        <img src="" id="croppedImg1" alt="">
                                                        <button type="button" id="saveButton1"
                                                            class="btn-sm btn-primary">Save</button>
                                                    </div>
                                                    <div class="row">
                                                        <div class="card-body align-items-center"
                                                            style="margin-bottom: 20px;">
                                                            <img src="" alt="" id="imgView2">
                                                            <input class="form-control" type="file" name="images"
                                                                id="input2" accept="image/png, image/jpeg, image/jpg"
                                                                onchange="viewImage2(event),viewImage(event, 2)">
                                                        </div>
                                                        <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg2" alt="">
                                                            <button type="button" id="saveButton2"
                                                                class="btn-sm btn-primary">Save</button>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="card-body align-items-center"
                                                            style="margin-bottom: 20px;">
                                                            <img src="" alt="" id="imgView3">
                                                            <input class="form-control" type="file" name="images"
                                                                id="input3" accept="image/png, image/jpeg, image/jpg"
                                                                onchange="viewImage3(event),viewImage(event, 3)">
                                                        </div>
                                                        <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg3" alt="">
                                                            <button type="button" id="saveButton3"
                                                                class="btn-sm btn-primary">Save</button>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="card-body align-items-center"
                                                            style="margin-bottom: 20px;">
                                                            <img src="" alt="" id="imgView4">
                                                            <input class="form-control" type="file" name="images"
                                                                id="input4" accept="image/png, image/jpeg, image/jpg"
                                                                onchange="viewImage4(event),viewImage(event, 4)">

                                                        </div>
                                                        <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg4" alt="">
                                                            <button type="button" id="saveButton4"
                                                                class="btn-sm btn-primary">Save</button>
                                                        </div>
                                                    </div>
                                                </div>
                                    </div>
                                    <div>


                                        <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="submit"
                                            onclick="validateForm(event)">Update</button>
                                    </div>
                                </form>
                    </div>
                </div>
            </div>
        </div>
        </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>


        // File type validation function
        function validateFileType(file) {

            const validImageTypes = [
                'image/jpeg',
                'image/jpg',
                'image/png',
                'image/webp'
            ];

            const isValidType = validImageTypes.includes(file.type);
            const extension = file.name.toLowerCase().split('.').pop();
            const isValidExtension = ['jpg', 'jpeg', 'png', 'webp'].includes(extension);

            return isValidType && isValidExtension;
        }

        // Handle file input validation
        function handleFileInput(event, inputNumber) {
            const file = event.target.files[0];
            if (file && !validateFileType(file)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid File Type',
                    text: 'Please upload only image files (JPG, PNG, WEBP)',
                    confirmButtonColor: '#3085d6'
                });

                event.target.value = '';
                document.getElementById(`imgView${inputNumber}`).src = '';
                return false;
            }
            return true;
        }

        // Clear error messages
        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
                element.style.display = 'none';
            });
        }

        // Display error message
        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            if (errorElement) {
                errorElement.innerText = message;
                errorElement.style.display = "block";
            }
        }

        // Main form validation
        function validateForm(event) {
            event.preventDefault();
            clearErrorMessages();

            const name = document.getElementsByName('productName')[0].value || '';
            const description = document.getElementsByName('description')[0].value || '';
            const brand = document.getElementsByName('brand')[0].value || '';
            const price = document.getElementsByName('regularPrice')[0].value || '';
            const saleprice = document.getElementsByName('salePrice')[0].value || '';
            const color = document.getElementsByName('color')[0].value || '';
            const category = document.getElementsByName('category')[0].value || '';
            const quantity = document.getElementsByName('quantity')[0].value || '';
            let imageDatas = document.getElementById("imageDatas")?.value;

            let isValid = true;
            let validImageCount = 0;

            // Basic field validation
            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            }

            if (color.trim() === "") {
                displayErrorMessage('color-error', 'Please enter a color.');
                isValid = false;
            }

            if (!quantity || parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }

            if (!price || !/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (!saleprice || !/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (price && saleprice && parseFloat(price) <= parseFloat(saleprice)) {
                displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
                isValid = false;
            }

            // Image validation
            const images = [
                document.getElementById('input1').files[0],
                document.getElementById('input2').files[0],
                document.getElementById('input3').files[0],
                document.getElementById('input4').files[0],
            ];

            // Count existing images if any
            if (imageDatas) {
                validImageCount++;
            }

            images.forEach((image, index) => {
                if (image) {
                    if (validateFileType(image)) {
                        validImageCount++;
                    } else {
                        displayErrorMessage(`images-error`, `Image ${index + 1} must be a valid image file (JPG, PNG, WEBP)`);
                        isValid = false;
                    }
                }
            });

            if (validImageCount < 1 && !imageDatas) {
                displayErrorMessage('images-error', 'Please upload at least one image');
                isValid = false;
            }

            if (isValid) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Product updated successfully',
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    document.getElementById('editProductPage').submit();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Please check all fields and try again',
                    confirmButtonColor: '#3085d6'
                });
            }

            return false;
        }

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('editProductPage');
            if (form) {
                form.addEventListener('submit', function (event) {
                    validateForm(event);
                });
            }
        });
        // Image preview functions
        function viewImage1(event) {
            if (handleFileInput(event, 1)) {
                document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0]);
            }
        }

        function viewImage2(event) {
            if (handleFileInput(event, 2)) {
                document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0]);
            }
        }

        function viewImage3(event) {
            if (handleFileInput(event, 3)) {
                document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0]);
            }
        }

        function viewImage4(event) {
            if (handleFileInput(event, 4)) {
                document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0]);
            }
        }

        // Image cropping function
        function viewImage(event, index) {
            let input = event.target;
            let reader = new FileReader();
            reader.onload = function () {
                let dataURL = reader.result;
                let image = document.getElementById('imgView' + index);
                image.src = dataURL;
                let cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true
                });
                let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                cropperContainer.style.display = 'block';
                let saveButton = document.querySelector('#saveButton' + index);
                saveButton.addEventListener('click', async function () {
                    let croppedCanvas = cropper.getCroppedCanvas();
                    let croppedImage = document.getElementById("croppedImg" + index);
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                    let timestamp = new Date().getTime();
                    let fileName = `cropped-img-${timestamp}-${index}.png`;
                    await croppedCanvas.toBlob(blob => {
                        let input = document.getElementById('input' + index);
                        let imgFile = new File([blob], fileName, blob);
                        const fileList = new DataTransfer();
                        fileList.items.add(imgFile);
                        input.files = fileList.files;
                    });

                    cropperContainer.style.display = 'none';
                });
            };
            reader.readAsDataURL(input.files[0]);
        }

        // Delete image function (preserved from original)
        function deleteSingleImage(imageId, productId) {
            $.ajax({
                url: '/admin/deleteimage',
                method: "POST",
                data: { imageNameToServer: imageId, productIdToServer: productId },
                success: (response) => {
                    if (response.status === true) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Delete SuccessFully'
                        })
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000)
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'The remove have error'
                        })
                    }
                },
                error: (err) => {
                    console.log("Error:", err);
                    Swal.fire({
                        icon: 'error',
                        title: `Error in ${err}`
                    })
                }
            });
        }


    </script>

    <%- include('../partials/admin/footer') %>